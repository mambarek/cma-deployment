version: "3.8"
services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch-oss:${ELASTIC_VERSION}
    container_name: elasticsearch
    hostname: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - 9200:9200
      - 9300:9300

  kibana:
    image: docker.elastic.co/kibana/kibana-oss:${ELASTIC_VERSION}
    container_name: kibana
    hostname: kibana
    depends_on:
      - elasticsearch
    ports:
      - 5601:5601
    restart: on-failure

  filebeat:
    image: docker.elastic.co/beats/filebeat-oss:${ELASTIC_VERSION}
    container_name: filebeat
    hostname: filebeat
    volumes:
      - ./filebeat/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro # Configuration file
      - /var/lib/docker/containers:/var/lib/docker/containers:ro           # Docker logs
      - /var/run/docker.sock:/var/run/docker.sock:ro                       # Additional information about containers
    user: root                                                             # Allow access to log files and docker.sock
    #command: filebeat -e -E output.elasticsearch.username=elastic -E output.elasticsearch.password=${ES_PASSWORD} -strict.perms=false
    restart: on-failure

  rabbitmq:
    image: rabbitmq:3.8.12-rc.1-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672

  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    hostname: zipkin
    ports:
      - 9411:9411

  eureka-discovery-service:
    image: mmbarek/eureka-discovery-service
    container_name: eureka-discovery-service
    ports:
      - 8761:8761
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8761/actuator/health" ]
      interval: 30s
      timeout: 1s
      retries: 5
    #labels:
    #  collect_logs_with_filebeat: "true"
    #  decode_log_event_to_json_object: "true"

  # attention module name is cma-configserver but image name is cma-config-server
  cma-config-server:
    image: mmbarek/cma-configserver
    container_name: cma-config-server
    depends_on:
      - eureka-discovery-service
      - rabbitmq
    environment:
      - SPRING_CLOUD_CONFIG_SERVER_GIT_URI=https://github.com/mambarek/cma-config-repo
      - SPRING_RABBITMQ_HOST=rabbitmq
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-discovery-service:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    ports:
      - ${CONFIG_SERVER_PORT}:8088
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8088/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    #labels:
    #  collect_logs_with_filebeat: "true"
    #  decode_log_event_to_json_object: "true"

  cma-api-gateway:
    image: mmbarek/cma-api-gateway
    container_name: cma-api-gateway
    depends_on:
      - cma-config-server
    environment:
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_ZIPKIN_BASEURL=http://zipkin:9411
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-discovery-service:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    ports:
      - ${API_GATEWAY_PORT}:8888
    restart: on-failure
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8888/actuator/health" ]
      interval: 30s
      timeout: 10s
      retries: 5
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  employees-service:
    image: mmbarek/employees-service
    container_name: employees-service
    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cma-config-server:8088/
      - SPRING_PROFILES_ACTIVE=cloud,rabbit,tracing
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_ZIPKIN_BASEURL=http://zipkin:9411
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-discovery-service:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    restart: on-failure
    depends_on:
      eureka-discovery-service: { condition: service_healthy }
      cma-config-server: { condition: service_healthy }
      cma-api-gateway: { condition: service_healthy }
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  projects_postgres:
    image: postgres:13.1-alpine
    container_name: projects_postgres
    volumes:
      - postgresqldata:/var/lib/postgresql/data
    ports:
      - 5432:5432
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_ENCODING=UTF8
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  projects-service:
    image: mmbarek/project-management-service
    container_name: projects_service
    depends_on:
      eureka-discovery-service: {condition: service_healthy}
      cma-config-server: {condition: service_healthy}
      cma-api-gateway: { condition: service_healthy }
      projects_postgres: {condition: service_healthy}
      employees-service: {condition: service_started}

    environment:
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cma-config-server:8088/
      - SPRING_DATASOURCE_URL=jdbc:postgresql://projects_postgres:5432/postgres
      - SPRING_DATASOURCE_USER=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_PROFILES_ACTIVE=postgres,cloud,rabbit,tracing
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_ZIPKIN_BASEURL=http://zipkin:9411
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-discovery-service:8761/eureka/
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
    restart: on-failure
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  car-fleet-service:
    image: mmbarek/car-fleet-service
    container_name: car-fleet-service
    environment:
      - SPRING_PROFILES_ACTIVE=cloud,rabbit,tracing
      - SPRING_RABBITMQ_HOST=rabbitmq
      - SPRING_ZIPKIN_BASEURL=http://zipkin:9411
      - KEYCLOAK_HOST=host.docker.internal
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://eureka-discovery-service:8761/eureka
      - EUREKA_INSTANCE_PREFER_IP_ADDRESS=true
      - SPRING_CONFIG_IMPORT=optional:configserver:http://cma-config-server:8088/
    restart: on-failure
    depends_on:
      eureka-discovery-service: { condition: service_healthy }
      cma-config-server: { condition: service_healthy }
      cma-api-gateway: { condition: service_healthy }
    labels:
      collect_logs_with_filebeat: "true"
      decode_log_event_to_json_object: "true"

  employees-webapp:
    image: mmbarek/employees-webapp
    container_name: employees-webapp
    depends_on:
      - projects-service
      - employees-service
      - car-fleet-service
    ports:
      - 4200:80
    environment:
      - PROJECTS_API_URL=http://localhost:${API_GATEWAY_PORT}/pms
      - EMPLOYEES_API_URL=http://localhost:${API_GATEWAY_PORT}/ems
      - CAR_FLEET_API_URL=http://localhost:${API_GATEWAY_PORT}/cms

volumes:
  postgresqldata:
    external: false
